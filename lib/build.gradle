plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

archivesBaseName = 'utils'
version = '1.3.5'

java {
    sourceCompatibility(JavaVersion.VERSION_1_8)
    targetCompatibility(JavaVersion.VERSION_1_8)
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //    api 'org.apache.commons:commons-lang3:3.10'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.

    implementation 'org.apache.commons:commons-lang3:3.10'

    //Dependencies for tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.0.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.0.3'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'BuildTools.Utils'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}